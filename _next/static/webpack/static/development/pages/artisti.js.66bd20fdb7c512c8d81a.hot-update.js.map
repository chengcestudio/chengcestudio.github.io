{"version":3,"file":"static/webpack/static\\development\\pages\\artisti.js.66bd20fdb7c512c8d81a.hot-update.js","sources":["webpack:///./components/controller.scroll.js"],"sourcesContent":["import  {PureComponent} from 'react'\r\n// import ReactDOM from 'react-dom'\r\n// import fetch from 'isomorphic-fetch' //\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport {isMobile}  from 'utils/device'\r\nimport {setScroll,setViewSize,setScrollOffsetY } from'reducers/root'\r\n// import {throttle, debounce}  from 'utils/throttle'\r\nimport  throttle  from 'lodash/throttle'\r\n\r\n\r\nclass Scroller extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        /*throttle 支持过程中间切换更快,但safari 造成重新布局卡顿*/\r\n        // this.lazySetOnUp = debounce(this.isScrollUp,100,{leading:false});\r\n        this.lazySetOnUp = throttle(this.isScrollUp,500);\r\n        // this.lazyY = debounce(this.updateY,200)\r\n        this._prevScrollY = 0;\r\n    }\r\n\r\n    isScrollUp = () => {\r\n\r\n        // debugger\r\n        this._scrollY = this.props.BarOnId?this.$win.scrollTop:window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop\r\n        if (this._scrollY === this._prevScrollY) return\r\n\r\n        if (this._scrollY - this._prevScrollY <= 0) { // is up ?\r\n\r\n            console.log('↑');\r\n            this.props.setScroll(true)\r\n        } else {\r\n            console.log('↓');\r\n            this.props.setScroll(false)\r\n        }\r\n        // 刷新当前scroll所在位置\r\n        this._prevScrollY = this._scrollY;\r\n    }\r\n\r\n    updateY = () => {\r\n        const y = this.props.BarOnId?this.$win.scrollTop:window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop\r\n        this._scrollY = y;\r\n        // this.props.setScrollOffsetY(y);\r\n        // debounce(this.props.setScrollOffsetY, 100);\r\n    }\r\n\r\n    handleScroll = (event) => {\r\n\r\n        event.preventDefault();  // 阻止事件继续传播\r\n        event.stopPropagation(); // 取消事件的默认行为\r\n        // this.lazyY()\r\n        this.lazySetOnUp()\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // 根据是否设置了滚动区域 ,决定 Listener 安装的元素\r\n        this.$win = this.props.BarOnId?document.getElementById(this.props.BarOnId):window\r\n        // 根据是否设置了滚动区域 ,决定从哪个元素获取 scroltop 的参数\r\n        this._prevScrollY = this.props.BarOnId?this.$win.scrollTop:window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop\r\n        this.$win.addEventListener('scroll', this.handleScroll,false)\r\n        // debugger\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (typeof this.$win == 'undefined') return\r\n        this.$win.removeEventListener('scroll', this.handleScroll,false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (typeof this.$win == 'undefined') return\r\n        //首次访问会出现无法识别windows\r\n        this.$win.removeEventListener('scroll', this.handleScroll,false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            null\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     view_size:state.Root.view_size,\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // root\r\n    setScroll: bindActionCreators(setScroll, dispatch),\r\n    setScrollOffsetY: bindActionCreators(setScrollOffsetY, dispatch),\r\n    // setBrowser: bindActionCreators(setBrowser, dispatch),\r\n\r\n  }\r\n}\r\n\r\nexport default connect( null, mapDispatchToProps)(Scroller)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AA1BA;AA4BA;AACA;AAEA;AACA;AACA;AAjCA;AAoCA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AArCA;AACA;AACA;AANA;AAOA;AACA;;;AAkCA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAGA;;;;AArEA;AA6EA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;;;;A","sourceRoot":""}