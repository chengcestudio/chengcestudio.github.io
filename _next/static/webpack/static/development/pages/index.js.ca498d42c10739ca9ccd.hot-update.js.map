{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ca498d42c10739ca9ccd.hot-update.js","sources":["webpack:///./components/avatar.js"],"sourcesContent":["\r\nimport {PureComponent} from 'react'\r\n// import glamorous,{withTheme} from 'glamorous'\r\nimport {css} from 'glamor'\r\n\r\nimport {ui, GR, perspZ}  from 'utils/ui'\r\nimport {IMG_WithLoader} from './img'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\n// const Triangle = (props)=>\r\nclass Triangle extends PureComponent{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        const size = this.props.size\r\n        return(\r\n            <svg\r\n             {...css({\r\n                width:size,\r\n                position:'absolute'\r\n             })}\r\n             viewBox= {`0 0 1 1`}\r\n            >\r\n                <polygon\r\n                 fill={ui.color.b_o2}\r\n                 stroke=\"none\"\r\n                 points={\r\n                    `0,0 `+//left_top\r\n                    `1,0 `+//right_top\r\n                    `0,1 `//right_bottom\r\n                }\r\n                />\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n// const Img = glamorous.div({\r\n// },(props)=>{\r\n//   width:   props.width,\r\n//   height:  props.height,\r\n//   //在这里找渐变模板 https: //webgradients.com/\r\n//   // backgroundColor:  props.src?`url(${props.src})`:'white',\r\n//   backgroundImage:  props.src?`url(${props.src})`:'white',\r\n// })\r\n//\r\n\r\n\r\n\r\n\r\n\r\n// IMG_WithLoader\r\nexport class AVATAR extends PureComponent {\r\n    constructor(props){\r\n        super(props)\r\n        this.PERSP = 1000;\r\n        this.Zp = {\r\n            pc:{\r\n                title : perspZ(30,this.PERSP),\r\n                img : perspZ(50,this.PERSP),\r\n                tiangle : perspZ(10,this.PERSP),\r\n            },\r\n            mobile:{\r\n                img : perspZ(30,this.PERSP),\r\n                title : perspZ(50,this.PERSP),\r\n                tiangle : perspZ(10,this.PERSP),\r\n            }\r\n        }\r\n    }\r\n\r\n    // perspZ =(translateZ , perspective)=>{\r\n    //     const scale = 1 + (translateZ * -1) / perspective\r\n    //     return `translateZ(${zp.translateZ}px) scale(${zp.scale});`\r\n    // }\r\n\r\n    render(){\r\n        const zp = this.props.landscape?this.Zp.pc:this.Zp.mobile\r\n        return(\r\n            <div {...css({\r\n                    position:'relative',\r\n                    height:this.props.SizeWidth,\r\n                    width:this.props.SizeWidth,\r\n                    transformStyle: 'preserve-3d',\r\n                 })}>\r\n\r\n                {/*Triangle*/}\r\n                <div\r\n                {...css({\r\n                    transform:`translateZ(${zp.tiangle.translateZ}px) scale(${zp.tiangle.scale})`\r\n                 })}>\r\n                    <Triangle\r\n                     size = {this.props.SizeWidth}\r\n                    />\r\n                </div>\r\n                {/*Triangle*/}\r\n\r\n                {/*IMG*/}\r\n                <div\r\n                {...css({\r\n                    transform:`translateZ(${zp.img.translateZ}px) scale(${zp.img.scale})`\r\n                 })}>\r\n                    <IMG_WithLoader\r\n                     src={this.props.src}\r\n                     height = {GR.px(1,this.props.SizeWidth)}\r\n                     width = {GR.px(1,this.props.SizeWidth)}\r\n                     top = {GR.px(3,this.props.SizeWidth)}\r\n                     left = {GR.px(4,this.props.SizeWidth)}\r\n                     fetch = {true}\r\n                    />\r\n                </div>\r\n                {/*IMG*/}\r\n\r\n\r\n                {/*TITLE*/}\r\n                <div\r\n                 {...css({\r\n                    position:'absolute',\r\n                    top:`${GR.px(5,this.props.SizeWidth)}px`,\r\n                    left:`${GR.px(5,this.props.SizeWidth)}px`,\r\n                    fontSize:`${GR.px(5,this.props.SizeWidth)}px`,\r\n                    color:ui.color.w_2,\r\n                    fontWeight:100,\r\n                    transform:`translateZ(${zp.title.translateZ}px) scale(${zp.title.scale})`\r\n                 })}\r\n                >{this.props.name}</div>\r\n                {/*TITLE*/}\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    // const onClose = state.Section[ownProps.name].onClose\r\n    return ({\r\n        landscape:state.Root.view_size.is_landscape,\r\n    });\r\n}\r\n\r\n// export default Nav;\r\nexport default connect(mapStateToProps ,null)(AVATAR)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;AAGA;AACA;AAFA;AAIA;AALA;AAQA;AACA;AACA;AACA;AAAA;AACA;AALA;AAWA;;;;AA1BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAHA;AAeA;AAGA;AACA;AACA;AACA;AACA;AAvBA;AAAA;AAAA;AAwBA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAUA;AADA;AAIA;AADA;AASA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAaA;AA5EA;AACA;AADA;AAAA;AACA;AAiFA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;A","sourceRoot":""}