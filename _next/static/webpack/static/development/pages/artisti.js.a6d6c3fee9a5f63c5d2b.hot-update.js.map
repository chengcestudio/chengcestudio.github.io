{"version":3,"file":"static/webpack/static\\development\\pages\\artisti.js.a6d6c3fee9a5f63c5d2b.hot-update.js","sources":["webpack:///./components/artisti.tab.button.js"],"sourcesContent":["import { css } from 'glamor'\r\nimport { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport {initTabs , touchOnTab} from 'reducers/artisti.tabs'\r\nimport {findPos} from 'utils/mouse'\r\n/**\r\n * 位于Avatar 右侧 的tab 导航栏\r\n * *** Component\r\n * COMP-1.TABS.BUTTONS 按钮\r\n * COMP-2.TBS.LINE 灰色斜线\r\n * *** 初始化工作\r\n * - 根据每个 ARTISTI 存在的Key生成 TAB.BUTTONS 按钮\r\n * - 储存每个TAB.BUTTONS 按钮位置 , 作为灰线移动依据\r\n * - 默认停留在第一个KEY - biography 上\r\n * *** Touch 选定交互\r\n * - 某个KEY (高亮) ,\r\n * - 灰色斜线(fixed) 移动至选定 Tab/Button 上\r\n * - reducer 发射通知 Artisti.Tab.section 组件 ,显示对相应KEY 的 value\r\n *\r\n */\r\n\r\n/* COMP-1.TABS.BUTTONS 按钮 */\r\n\r\nclass TABS extends PureComponent {\r\n\r\n    constructor (props) {\r\n\r\n        super(props)\r\n        this.handleClick = this._onClickTab\r\n        this.tabs =['BIOGRAPHY','WORKS','SELECTTEXTS','NEWS','EXHIBITIONS']\r\n        this.tabsName = {\r\n            it:['BIOGRAFIA','OPERE','SELECTTEXTS','NOTIZIE','MOSTRE'],\r\n            zh:['简  历','作  品','摘  文','新  闻','展  览'],\r\n            en:['BIOGRAPHY','WORKS','SELECTTEXTS','NEWS','EXHIBITIONS'],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let obj ={}\r\n        this.tabs.map((tab)=>\r\n            obj[tab] = findPos(this[`$${tab}`])\r\n        )\r\n\r\n        this.props.initTabs(obj)/*用于网页刷新/跳转时初始化 各个Tabs 的状态*/\r\n\r\n        // 默认选择第一个Tab\r\n        const firstTab = this.tabs[0]\r\n        this.props.touchOnTab(firstTab)\r\n    }\r\n\r\n    _onClickTab(index){\r\n        // debugger\r\n        const tabName = this.tabs[index]\r\n        this.props.touchOnTab(tabName)\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            [\r\n                <div\r\n\r\n                 {...css({\r\n                    position:'relative',\r\n                    top:0,\r\n                    right:0,\r\n                    width:this.props.width,\r\n                    display:'flex',\r\n                    flexDirection:'column',\r\n                    justifyContent:'flex-end',//space-around均匀分布\r\n                    transformStyle: 'preserve-3d',\r\n                    backfaceVisibility: 'hidden',\r\n                 })}\r\n                 key = {`TABS`}\r\n                 className = {'Buttons'}\r\n                >\r\n                    {this.tabsName[this.props.language].map((tab,index)=>\r\n                        <div\r\n                         {...css({// button\r\n                            transformStyle: 'preserve-3d',//@parallax\r\n                            cursor: 'pointer',\r\n                            marginTop:'1.5em',\r\n                            // marginBottom:'.5em',\r\n                            textAlign:'right',\r\n                         })}\r\n                         ref = {c => this[`$${this.tabs[index]}`] = c}\r\n                         key = {`tabs_${index}`}\r\n                         id = {this.tabs[index]}\r\n                         className = {'tabsButtons'}\r\n                         onClick = {this._onClickTab.bind(this,index)}//传入tabName\r\n                        >\r\n                            {tab}\r\n                        </div>\r\n                    )}\r\n\r\n                </div>,\r\n\r\n                <div\r\n                 {...css({\r\n                    position:'absolute',\r\n                })}\r\n                 key = {'tabs_line'}\r\n                >\r\n                </div>\r\n        ]\r\n        )//return\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    language:state.Root.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch ) =>{\r\n    return {\r\n        initTabs:bindActionCreators(initTabs, dispatch ),\r\n        touchOnTab:bindActionCreators(touchOnTab, dispatch ),\r\n    }\r\n}\r\n\r\n// export default Nav;\r\nexport default connect(mapStateToProps ,mapDispatchToProps)(TABS)\r\n\r\n// Post2Tabs = () => {\r\n//     this.tab_names = [\r\n\r\n//   ];,\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAUA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AAWA;AACA;AAdA;AAgBA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAbA;AADA;AAuBA;AADA;AAGA;AAJA;AASA;;;;AApFA;AACA;AAsFA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AAEA;;;;A","sourceRoot":""}