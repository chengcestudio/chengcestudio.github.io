{"version":3,"file":"static/webpack/static\\development\\pages\\artisti.js.ea58503de3e6013a3e18.hot-update.js","sources":["webpack:///./components/artisti.tab.biography.js"],"sourcesContent":["import { css } from 'glamor'\r\nimport { PureComponent } from 'react'\r\nimport {ui }  from 'utils/ui'\r\nimport { connect } from 'react-redux'\r\nimport TAB from 'components/artisti.tab.Wrapper'\r\n\r\nclass Button extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div\r\n             {...css({\r\n                marginRight:this.props.landscape?'3rem':0,\r\n                cursor:'pointer',\r\n                // width:'3rem',/*居中*/\r\n                color:this.props.on?ui.color.b_o1:ui.color.b_o2,\r\n                fontWeight:this.props.on?900:100,\r\n                userSelect: 'none',\r\n             })}\r\n\r\n             onClick={this.props.onClick}\r\n            >{this.props.name}</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Biography extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {on:'ALL'}\r\n        this.handleClick  = this.onClick.bind(this)\r\n        this.exhibitionButtons = {\r\n            en:['ALL EXHIBITIONS','SOLO EXHIBITIONS','GROUP EXHIBITIONS'],\r\n            it:['TUTTE LE MOSTRE','MOSTRE PERSONALI','MOSTRE COLLETTIVE'],\r\n            zh:['所有展览','个展','群展'],\r\n        }\r\n    }\r\n\r\n    onClick(name){\r\n        this.setState({on:name})\r\n    }\r\n\r\n    render(){\r\n        // debugger\r\n        const EXHIBITIONS = this.props.contents.exhibitions\r\n        const BIOGRAPHY = this.props.contents.biography\r\n        let exhibitions={}\r\n\r\n\r\n        if (this.state.on ==='Solo'){\r\n            exhibitions = EXHIBITIONS[this.props.language][0]\r\n        }else if (this.state.on ==='Group'){\r\n            exhibitions = EXHIBITIONS[this.props.language][1]\r\n        }else if(this.state.on ==='ALL'){\r\n            // 遗憾 array 的数据没有合并在一起\r\n            // 1.\r\n            /*let obj = Object.assign({},{...this.props.exhibitions[this.props.language][0]},{...this.props.exhibitions[this.props.language][1]})*/\r\n            const solo =EXHIBITIONS[this.props.language][0]\r\n            const group =EXHIBITIONS[this.props.language][1]\r\n\r\n            let all = Object.assign({},{...solo})\r\n            for(let key in all){\r\n                if(group[key]){\r\n                    all[key]= all[key].concat(group[key])\r\n                }\r\n            }\r\n            exhibitions = Object.assign({},{...group},{...all})\r\n        }\r\n\r\n        return(\r\n            <div\r\n            {...css({\r\n                  position:'relative',\r\n                  width:`${this.props.width}`,\r\n                  margin:'auto',//居中\r\n                  minHeight:'60vh',//为了footer\r\n                  userSelect: 'none',\r\n              })}\r\n            className = {this.props.tabName}\r\n            >\r\n\r\n\r\n                {\r\n                    BIOGRAPHY[this.props.language]\r\n                        .split('\\n')\r\n                        .map((item, key) =>\r\n                          <span key={`${this.props.tabName}_${key}_${this.props.language}`}>{item}<br/><br/></span>\r\n                        )\r\n                }\r\n\r\n\r\n\r\n\r\n                <div\r\n                  {...css({\r\n\r\n                    display:'flex',\r\n                    flexDirection:'row',\r\n                    justifyContent:this.props.landscape?'flex-start':'center',/*如果是手机居中*/\r\n                    // marginLeft:'auto',\r\n                    // marginRight:'auto',\r\n                    // alignItems: 'center',\r\n                    marginTop:'2rem',\r\n                    marginBottom:'3rem',\r\n                })}\r\n                >\r\n                    <Button\r\n                     name = {this.exhibitionButtons[this.props.language][0]}\r\n                     landscape = {this.props.landscape}\r\n                     width =  {this.props.width}\r\n                     onClick={()=>{this.handleClick('ALL')}}\r\n                     on = {this.state.on ==='ALL'}/>\r\n                    <Button\r\n                     name = {this.exhibitionButtons[this.props.language][1]}\r\n                     landscape = {this.props.landscape}\r\n                     width = {this.props.width}\r\n                     onClick={()=>{this.handleClick('Solo')}}\r\n                     on = {this.state.on ==='Solo'}/>\r\n                    <Button\r\n                     name = {this.exhibitionButtons[this.props.language][2]}\r\n                     landscape = {this.props.landscape}\r\n                     width = {this.props.width}\r\n                     onClick={()=>{this.handleClick('Group')}}\r\n                     on = {this.state.on ==='Group'}/>\r\n                </div>\r\n\r\n                {/* 个展&群展 */}\r\n                {\r\n                     Object.keys(exhibitions).map((item, index) =>\r\n                            <div\r\n                             {...css({\r\n                                justifyContent:'flex-start',\r\n                                display:'flex',\r\n                                flexDirection:'row',\r\n                             })}\r\n                             key={`${this.props.tabName}_exhibitions_${Object.keys(item)}_${this.props.language}_${index}`}\r\n                            >\r\n                                <div\r\n                                 {...css({\r\n                                    color:ui.color.b_o2,\r\n                                    fontWeight:900,\r\n\r\n                                 })}\r\n                                >{item}</div>\r\n                                <div\r\n                                 {...css({\r\n                                    justifyContent:'flex-start',\r\n                                    display:'flex',\r\n                                    flexDirection:'column',\r\n                                    marginLeft:this.props.landscape?'2rem':'0.8em',\r\n                                    marginBottom:'1rem',\r\n                                 })}\r\n                                >\r\n                                    {exhibitions[item].map((s,i)=>\r\n                                        <p\r\n                                        {...css({\r\n                                          marginTop:'0.3em',\r\n                                          marginBottom:'0.3em',\r\n                                          userSelect: 'none',\r\n                                       })}\r\n                                         key = {`${this.props.tabName}_exhibitions_${Object.keys(item)}_${index}_${i}`}\r\n                                         >{`${s}`}</p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n\r\n            </div>\r\n        )/*return*/\r\n    }/*render*/\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return ({\r\n        // vw:state.Root.view_size.vw,\r\n        // landscape:state.Root.view_size.is_landscape,\r\n        language:state.Root.language,\r\n        landscape:state.Root.view_size.is_landscape,\r\n        // on:state.Tab.on,\r\n    });\r\n}\r\n\r\n\r\nconst Comp = connect(mapStateToProps,null)(Biography)\r\nexport default TAB()(Comp)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAVA;AAaA;;;;AAnBA;AACA;AAuBA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AASA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AALA;AAOA;AARA;AAeA;AACA;AAAA;AADA;AAWA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAUA;AAGA;AACA;AACA;AAHA;AAKA;AANA;AAUA;AACA;AAFA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AAGA;AACA;AACA;AAHA;AAKA;AANA;AADA;AAzBA;AA0CA;AACA;AAAA;AACA;;;;AAlJA;AACA;AAmJA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAEA;AACA;;;;A","sourceRoot":""}