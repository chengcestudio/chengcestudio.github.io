{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f6b4a5ca3344a5f3fa4b.hot-update.js","sources":["webpack:///./components/controller.resize.js"],"sourcesContent":["import  {PureComponent} from 'react'\r\n// import fetch from 'isomorphic-fetch' //\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport {setViewSize } from'reducers/root'\r\nimport {debounce}  from 'utils/throttle'\r\nimport {isLandscape }  from 'utils/device'\r\n\r\n\r\n\r\n\r\n\r\nclass Resizer extends PureComponent {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.lazyResize = debounce(this.handleReSize ,400 );\r\n    }\r\n\r\n    setViewSize=()=>{\r\n        console.info('Resize - setViewSize on redux')\r\n        this.props.setViewSize({\r\n              vh:  window.innerHeight,//window.innerHeight,//document.documentElement.clientHeight,\r\n              vw:  window.innerWidth,//window.innerWidth,//document.documentElement.clientWidth,\r\n              is_landscape:isLandscape()\r\n          })\r\n    }\r\n    handleReSize=()=>{\r\n        console.log('resize')\r\n        this.setViewSize()\r\n      }\r\n\r\n\r\n    componentDidMount() {\r\n        // LISTENERS\r\n        window.addEventListener('resize', this.lazyResize);\r\n        // 如果是直接访问,root 没有viewSize 信息\r\n        if (this.props.view_size.vh === 0) {this.setViewSize()}\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.lazyResize);\r\n    }\r\n\r\n    componentWillUnMount() {\r\n        if (typeof window == 'undefined') return\r\n        //首次访问会出现无法识别windows\r\n        window.removeEventListener('resize', this.lazyResize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            null\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    view_size:state.Root.view_size,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // root\r\n    setViewSize: bindActionCreators(setViewSize, dispatch),\r\n    // setBrowser: bindActionCreators(setBrowser, dispatch),\r\n\r\n  }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)(Resizer)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;AAIA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AAKA;AACA;AAbA;AAcA;AACA;AAAA;AACA;AACA;AAfA;AAFA;AAGA;AACA;;;AAeA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAGA;;;;AA7CA;AACA;AAmDA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;;;;A","sourceRoot":""}